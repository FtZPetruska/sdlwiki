= SDL_SetWindowFullscreen =

Set a window's fullscreen state.

== Syntax ==

<syntaxhighlight lang='c'>
int SDL_SetWindowFullscreen(SDL_Window * window,
                            Uint32 flags);
</syntaxhighlight>

== Function Parameters ==

{|
|'''window'''
|the window to change
|-
|'''flags'''
|<code>[[SDL_WINDOW_FULLSCREEN]]</code>, <code>[[SDL_WINDOW_FULLSCREEN_DESKTOP]]</code> or 0
|}

== Return Value ==

Returns 0 on success or a negative error code on failure; call
[[SDL_GetError]]() for more information.

== Remarks ==

<code>flags</code> may be <code>[[SDL_WINDOW_FULLSCREEN]]</code>, for
"real" fullscreen with a videomode change;
<code>[[SDL_WINDOW_FULLSCREEN_DESKTOP]]</code> for "fake" fullscreen that
takes the size of the desktop; and 0 for windowed mode.

If you're using the default D3D9 renderer, this function will trigger an SDL_RENDER_TARGETS_RESET event. You'll have to handle it by re-creating all of your textures.
If you want to avoid that, you can use the OpenGL or D3D11 renderers, by setting one of these hints before your SDL_CreateWindowAndRenderer() call:
<code>SDL_SetHint( SDL_HINT_RENDER_DRIVER, "opengl" );
SDL_SetHint( SDL_HINT_RENDER_DRIVER, "direct3d11" );</code>

== Version ==

This function is available since SDL 2.0.0.

== Related Functions ==

:[[SDL_GetWindowDisplayMode]]
:[[SDL_SetWindowDisplayMode]]

----
[[CategoryAPI]], [[CategoryVideo]]


